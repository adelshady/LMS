@model Stage
@{
    ViewData["Title"] = "StageCreate";
}

<br />
<h2 class="text-info">Create Stage</h2>
<br />

<br />


<form method="post" asp-action="StageCreate">
    <div class=" border backgroundWhite">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group row">

            <div class="col-3">
                <label asp-for="SectionId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="SectionId" asp-items="@ViewBag.Section" class="form-control"></select>
            </div>
        </div>

        <div class="form-group row">

            <div class="col-2">
                <label asp-for="Name" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input asp-for="Name" class="form-control" />
            </div>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-5 offset-2">
                <div class="row">
                    <div class="col-6">
                        <input type="submit" class="btn btn-info form-control" value="Create" />
                    </div>
                    <div class="col-6">
                        <a asp-action="StageIndex" class="btn btn-success form-control">Back To List</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
@if (@ViewBag.message == null)
{
}
else
{
    <div class="alert alert-danger alert-dismissible" >
        @*<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>*@
        Stage exited please use another name
    </div>

}


@section scripts{

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}